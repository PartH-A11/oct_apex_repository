pipeline {
    agent any

    environment {
        APEX_WORKSPACE = "TEST"
        APEX_USERNAME = "parth.suthar"
        DB_HOST = "3.109.61.107"
        DB_SERVICE = "osprod.OSPROD"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'develop', url: 'https://github.com/PartH-A11/oct_apex_repository'
                fingerprint 'f10008181.sql'
            }
        }

        stage('Retrieve Credentials') {
            steps {
                script {
                    withCredentials([
                        usernamePassword(credentialsId: 'DBpassword', usernameVariable: 'DB_USER', passwordVariable: 'DB_PASSWORD')
                    ]) {
                        env.DB_CONN = "${DB_USER}/${DB_PASSWORD}@${DB_HOST}:1521/${DB_SERVICE}"
                    }
                }
            }
        }

        stage('Validate SQL Files') {
            steps {
                script {
                    def sqlFile = "App_Code/f10008181.sql"
                    sh "sed -i 's/10008181/202008181/g' ${sqlFile}"
                    sh "sed -i 's/APEX_PIPELINE_DEV/APEX_PIPELINE_TEST/g' ${sqlFile}"
                    sh "sed -i 's/apex_pipeline_dev/apex_pipeline_test/g' ${sqlFile}"
                    sh "sed -i 's/1097129076331899815/1097130504259902316/g' ${sqlFile}"
                    def sqlclPath = "/u01/sqlcl/sqlcl/bin/sql"
                    def result = sh(script: "\"${sqlclPath}\" -s \"${DB_CONN}\" @${sqlFile}", returnStatus: true)
                    if (result != 0) {
                        error "SQL validation failed! Check script for errors."
                    }
                }
            }
        }

        stage('Deploy APEX Application') {
            steps {
                script {
                    def files = findFiles(glob: 'App_Code/10008181.sql')
                    files.each { file ->
                        echo "Deploying SQL file: ${file.name}"
                        sh "/u01/sqlcl/sqlcl/bin/sql -s \"${DB_CONN}\" @${file.path}"
                    }
                }
            }
        }
        
stage('Update and Push to Test Branch') {
    steps {
        script {
            def originalFile = "App_Code/f10008181.sql"

            // Generate versioned filename
            def version = new Date().format("yyyyMMdd_HHmmss")
            def versionedFile = "App_Code/f10008181${version}.sql"

            // Copy and modify the versioned file (leave original untouched)
            sh "cp ${originalFile} ${versionedFile}"
            sh "sed -i 's/10008181/20008181/g' ${versionedFile}"
            sh "sed -i 's/APEX_PIPELINE_DEV/APEX_PIPELINE_TEST/g' ${versionedFile}"
            sh "sed -i 's/apex_pipeline_dev/apex_pipeline_test/g' ${versionedFile}"
            sh "sed -i 's/1097129076331899815/1097130504259902316/g' ${versionedFile}"

            // Use credentials to push
            withCredentials([usernamePassword(credentialsId: 'GITHUB_CREDS', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_TOKEN')]) {
                sh 'git config user.name "PartH-A11"'
                sh 'git config user.email "parth.suthar@octalsoft.com"'

                // Reset changes before switching branch
                sh "git restore ${originalFile}"
                sh 'git checkout test'
                sh 'git pull origin test'
                sh 'git remote set-url origin https://${GIT_USER}:${GIT_TOKEN}@github.com/PartH-A11/oct_apex_repository.git'

                // Add and push versioned file
                sh "git add ${versionedFile}"
                sh "git commit -m 'Added versioned SQL: ${versionedFile}' || echo 'No changes to commit'"
                sh 'git push origin test'
            }
        }
    }
}




        stage('Notify') {
            steps {
                echo "Deployment successful! APEX Application is live on: https://ins5.octalsoft.com/apex/r/apex/workspace-sign-in"
            }
        }
    }
}
